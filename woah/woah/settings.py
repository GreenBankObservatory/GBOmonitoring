"""
Django settings for GBOmonitoring project.

Generated by 'django-admin startproject' using Django 3.2.12.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""
from getpass import getuser
from pathlib import Path
import environ
import os


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
SETTINGS_DIR = Path(__file__).resolve().parent

_user = getuser()
env = environ.Env(
    DEBUG=(bool, True),
    ALLOWED_HOSTS=(list, []),
    INTERNAL_IPS=(list, []),
    SENTRY_ENV=(str, f"{_user}_dev"),
)

_env_file_template_path = Path(SETTINGS_DIR, ".env.template")
_default_env_file_path = Path(SETTINGS_DIR, ".env")
_env_file_path = env.str("ENV_PATH", _default_env_file_path)
if not Path(_env_file_path).exists():
    print(
        f"You must create a .env file at {_default_env_file_path} "
        f"(use {_env_file_template_path} as a template), "
        "or specify another path via the ENV_PATH variable"
    )
    _env_file_path = env.str("ENV_PATH", _env_file_template_path)
try:
    with open(_env_file_path):
        pass
except PermissionError as error:
    raise PermissionError(
        f"You do not have permission to read {_env_file_path}. Please contact gbosdd@nrao.edu"
        "if this is in error"
    ) from error
environ.Env.read_env(_env_file_path)

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env("SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = env("ALLOWED_HOSTS")


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'crispy_forms',
    'crispy_bootstrap4',
    'table', # django-datatable
    'dashboards',
    'prometheus',
    'alerts',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'GBOmonitoring.urls'
LOGIN_REDIRECT_URL = 'home'   
LOGOUT_REDIRECT_URL = 'home'
TEMPLATE_DIR = os.path.join(BASE_DIR, 'GBOmonitoring/templates')

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [TEMPLATE_DIR],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'GBOmonitoring.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = { 
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    },
    "woah": {
        **env.db("WOAH_DB_URL"),
        "TIME_ZONE": "UTC",
        "TEST": {"DEPENDENCIES": []},
    },
}

DATABASE_ROUTERS = ["GBOmonitoring.db_routers.DbRouter"]

# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'

# STATIC_ROOT production load 
STATIC_ROOT = os.path.join(BASE_DIR, "GBOmonitoring/staticfiles")

# STATIC_ROOT development load 
STATICFILES_DIRS = (
    os.path.join(BASE_DIR, "GBOmonitoring/static"),
)


# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

CRISPY_TEMPLATE_PACK = "bootstrap4"
